package com.scistor.label.hive;import java.util.regex.Matcher;import java.util.regex.Pattern;/** * Created by liukai on 2015/8/8. * 代表一个hive表的位置 */public class HCatTable {    protected String metaStoreURI;    protected String databaseName;    protected String tableName;    public HCatTable() {    }    public HCatTable(String metaStoreURI, String databaseName, String tableName) {        this.databaseName = databaseName;        this.metaStoreURI = metaStoreURI;        this.tableName = tableName;    }    public String getDatabaseName() {        return databaseName;    }    public void setDatabaseName(String databaseName) {        this.databaseName = databaseName;    }    public String getMetaStoreURI() {        return metaStoreURI;    }    public void setMetaStoreURI(String metaStoreURI) {        this.metaStoreURI = metaStoreURI;    }    public String getTableName() {        return tableName;    }    public void setTableName(String tableName) {        this.tableName = tableName;    }    @Override    public String toString() {        String s = "";        if (metaStoreURI != null) {            s +=  metaStoreURI + "/";        }        s += databaseName + "/" + tableName;        return s;    }    public HCatTable(String hCatTable) {        Pattern p = Pattern.compile("^(thrift://)\\d+\\.\\d+\\.\\d+\\.\\d*\\:\\d+");        hCatTable = hCatTable.toLowerCase();        Matcher m = p.matcher(hCatTable);        boolean found = m.find();        if (found) {            String metaStoreURI = m.group();            this.setMetaStoreURI(metaStoreURI);            int endPos = m.end();            String dbtbs = hCatTable.substring(endPos + 1);            String dbtb[] = dbtbs.split("/");            this.setDatabaseName(dbtb[0]);            this.setTableName(dbtb[1]);        } else {            if (hCatTable.startsWith("/")) {                hCatTable = hCatTable.substring(1, hCatTable.length());            }            String dbtb[] = hCatTable.split("/");            this.setDatabaseName(dbtb[0]);            this.setTableName(dbtb[1]);        }    }}